defaults:
  - override job_logging: colorlog 
  - override hydra_logging: colorlog
  #- override sweeper: list


run:
  dir: ${path.log_dir}/${name}/${task_name}/runs/${now:%d-%m}_${now:%H-%M-%S}
sweep:
  dir: log
  ## https://github.com/facebookresearch/hydra/issues/1786 interpolation should be done in subdir
  subdir: ${path.log_dir}/${name}/${task_name}/multiruns/${now:%d-%m}_${now:%H-%M-%S}/${hydra.job.num}


job_logging:
  formatters:
    simple: 
      format: '[%(asctime)s][${name}--${task_name}][%(name)s:%(lineno)s][%(levelname)s] - %(message)s'
      datefmt: '%d/%m-%H:%M:%S'
    colorlog:
      format: '[%(purple)s${name}--${task_name}%(reset)s:%(blue)s%(name)s%(reset)s:%(cyan)s%(lineno)s%(reset)s][%(log_color)s%(levelname)s%(reset)s] - %(message)s'

  # handlers:
  #   file:
  #     class: logging.FileHandler
  #     formatter: simple
  #     filename: ${path.out_dir}/run.log  #${hydra.job.name}.log
  #     #mode: 'a'
  #   root:
  #   handlers: [console]

  # root:
  #   level: INFO
  #   handlers: [console, file]

  # TODO: refactor loggers
  # - remove the util/loggers.py logic 
  # - rewrite the debug/...yml to incorporate same logic as debug/vldt
  # - change all headers: 
  #     from src.utils import get_log // log.get_log(__name__) -> import logging // log = logging.getLogger(__name__)
  loggers:
    __main__:
      level: INFO
    visdom:
      level: WARN
    websocket:
      level: WARN
    matplotlib:
      level: WARN


## resources      
## https://github.com/facebookresearch/hydra/issues/1903
## https://github.com/facebookresearch/hydra/discussions/2804
## https://github.com/facebookresearch/hydra/issues/2735